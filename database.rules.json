
{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "users": {
      ".read": "auth != null",
      "$uid": {
        ".write": "$uid === auth.uid",
        "id": {
          ".validate": "newData.isString() && newData.val() === $uid"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().contains('@')"
        },
        "fullName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 100"
        },
        "avatarUrl": {
          ".validate": "newData.isString()"
        },
        "year": {
          ".validate": "newData.isString() && (newData.val() === '1st Year' || newData.val() === '2nd Year' || newData.val() === '3rd Year' || newData.val() === 'Final Year')"
        },
        "bio": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 500"
        },
        "skills": {
          ".validate": "newData.hasChildren()"
        },
        "teamId": {
          ".validate": "newData.isString() || newData.val() === null"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "teams": {
      ".read": "auth != null",
      "$teamId": {
        ".write": "(!data.exists() && root.child('users').child(auth.uid).child('teamId').val() === null) || (data.exists() && data.child('leaderId').val() === auth.uid)",
        ".validate": "!newData.exists() || newData.hasChildren(['id', 'name', 'projectIdea', 'leaderId', 'members', 'isRecruiting'])",
        "id": {
          ".validate": "newData.isString() && newData.val() === $teamId"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 100"
        },
        "projectIdea": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 1000"
        },
        "leaderId": {
          ".validate": "newData.isString() && ((!data.exists() && newData.val() === auth.uid) || (data.exists() && newData.val() === data.child('leaderId').val()))"
        },
        "isRecruiting": {
          ".validate": "newData.isBoolean()"
        },
        "members": {
          ".validate": "!newData.exists() || (newData.child(newData.parent().child('leaderId').val()).exists() && newData.child(newData.parent().child('leaderId').val()).val() === true)",
          "$uid": {
            ".validate": "newData.val() === true"
          }
        },
        "appeal": {
          ".validate": "!newData.exists() || newData.hasChildren(['description', 'requiredSkills'])",
          "description": {
            ".validate": "newData.isString()"
          },
          "requiredSkills": {
            ".validate": "newData.hasChildren()"
          },
          "$other": {
            ".validate": false
          }
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "requests": {
      "$requestId": {
        ".read": "data.child('userId').val() === auth.uid || root.child('teams').child(data.child('teamId').val()).child('leaderId').val() === auth.uid",
        ".write": "(!data.exists() && newData.child('userId').val() === auth.uid && root.child('users').child(auth.uid).child('teamId').val() === null) || (data.exists() && root.child('teams').child(data.child('teamId').val()).child('leaderId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['userId', 'teamId'])"
      }
    },
    "invitations": {
      "$invitationId": {
        ".read": "data.child('userId').val() === auth.uid",
        ".write": "(!data.exists() && root.child('teams').child(newData.child('teamId').val()).child('leaderId').val() === auth.uid) || (data.exists() && data.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['userId', 'teamId'])"
      }
    },
    "messages": {
      "$messageId": {
        ".read": "root.child('teams').child(data.child('teamId').val()).child('members').child(auth.uid).exists()",
        ".write": "(!data.exists() && newData.child('senderId').val() === auth.uid && root.child('teams').child(newData.child('teamId').val()).child('members').child(auth.uid).exists()) || (data.exists() && !newData.exists() && data.child('senderId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['teamId', 'senderId', 'senderName', 'text', 'timestamp'])",
        "senderAvatar": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "communityMessages": {
      "$messageId": {
        ".read": "auth != null",
        ".write": "(!data.exists() && newData.child('senderId').val() === auth.uid) || (data.exists() && !newData.exists() && data.child('senderId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['senderId', 'senderName', 'text', 'timestamp'])",
        "senderAvatar": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": false
        }
      }
    },
    "skills": {
      "$skillId": {
        ".validate": "newData.hasChildren(['name']) && newData.child('name').isString()"
      }
    }
  }
}